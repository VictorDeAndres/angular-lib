{"version":3,"file":"ng-library-common-library.js","sources":["ng://@ng-library/common-library/lib/wrapper-component-d3.service.ts","ng://@ng-library/common-library/lib/colors.service.ts"],"sourcesContent":["import { ElementRef } from '@angular/core';\n\nimport * as d3 from 'd3';\n\nexport class WrapperComponentD3 {\n\n  private _svgContainer;\n  private _uid: string;\n  private _height: number;\n  private _width: number;\n\n  constructor(\n    _elementRef: ElementRef\n  ) {\n\n    // Initialize private variables\n    this._uid = this.generateUID();\n    this._height = _elementRef.nativeElement.clientHeight;\n    this._width = _elementRef.nativeElement.clientWidth;\n\n    // Add Id to Element;\n    _elementRef.nativeElement.id = this._uid;\n\n    // Create svg container\n    this._svgContainer = d3.select(`#${this._uid}`)\n      .append('svg')\n      .attr('id', `svg-${this._uid}`)\n      .attr('height', this._height)\n      .attr('width', this._width);\n  }\n\n  /**\n   * svgContainer\n   * return svg container\n   * @returns HTMLElement\n   */\n  get svgContainer(): HTMLElement {\n    return this._svgContainer;\n  }\n\n  /**\n   * uid\n   * return uid of container\n   * @returns string\n   */\n  get uid(): string {\n    return this._uid;\n  }\n\n  /**\n   * height\n   * return height of container\n   * @returns number\n   */\n  get height(): number {\n    return this._height;\n  }\n\n  /**\n   * width\n   * return width of container\n   * @returns number\n   */\n  get width(): number {\n    return this._width;\n  }\n\n  /**\n   * generateUID\n   * Generate new UID. The uid is make with Date.now and plus random number and then replace it to string.\n   * @returns string\n   */\n  private generateUID(): string {\n    return (Date.now() + Math.random()).toString(36).replace('.', '-');\n  }\n}","import { ElementRef } from '@angular/core';\n\nexport class Colors {\n\n  constructor() { }\n\n  /**\n   * generateRandomPallete\n   *\n   * Generate random palette of colors\n   * @param length. Number of colors in generate pallete\n   * @returns Array\n   */\n  generateRandomPallete(length: number): Array<string> {\n    const letters = '0123456789ABCDEF';\n    const pallete = new Array(length).fill('');\n    return pallete.map( () => {\n      let color = '#';\n      for (let i = 0; i < 6; i++) {\n        color += letters[Math.floor(Math.random() * 16)];\n      }\n      return color;\n    });\n  }\n}\n"],"names":["d3.select"],"mappings":";;;;;;;AAEA;IASE,4BACE,WAAuB;;QAIvB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;QAC/B,IAAI,CAAC,OAAO,GAAG,WAAW,CAAC,aAAa,CAAC,YAAY,CAAC;QACtD,IAAI,CAAC,MAAM,GAAG,WAAW,CAAC,aAAa,CAAC,WAAW,CAAC;;QAGpD,WAAW,CAAC,aAAa,CAAC,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC;;QAGzC,IAAI,CAAC,aAAa,GAAGA,MAAS,CAAC,MAAI,IAAI,CAAC,IAAM,CAAC;aAC5C,MAAM,CAAC,KAAK,CAAC;aACb,IAAI,CAAC,IAAI,EAAE,SAAO,IAAI,CAAC,IAAM,CAAC;aAC9B,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,OAAO,CAAC;aAC5B,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;KAC/B;IAOD,sBAAI,4CAAY;;;;;;;;;;;QAAhB;YACE,OAAO,IAAI,CAAC,aAAa,CAAC;SAC3B;;;OAAA;IAOD,sBAAI,mCAAG;;;;;;;;;;;QAAP;YACE,OAAO,IAAI,CAAC,IAAI,CAAC;SAClB;;;OAAA;IAOD,sBAAI,sCAAM;;;;;;;;;;;QAAV;YACE,OAAO,IAAI,CAAC,OAAO,CAAC;SACrB;;;OAAA;IAOD,sBAAI,qCAAK;;;;;;;;;;;QAAT;YACE,OAAO,IAAI,CAAC,MAAM,CAAC;SACpB;;;OAAA;;;;;;;;;;;;IAOO,wCAAW;;;;;;IAAnB;QACE,OAAO,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,IAAI,CAAC,MAAM,EAAE,EAAE,QAAQ,CAAC,EAAE,CAAC,CAAC,OAAO,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;KACpE;IACH,yBAAC;CAAA,IAAA;;;;;;IArEC,2CAAsB;;;;;IACtB,kCAAqB;;;;;IACrB,qCAAwB;;;;;IACxB,oCAAuB;;;;;;;;ACPzB;IAEE;KAAiB;;;;;;;;;;;;;;;IASjB,sCAAqB;;;;;;;IAArB,UAAsB,MAAc;;YAC5B,OAAO,GAAG,kBAAkB;;YAC5B,OAAO,GAAG,IAAI,KAAK,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC;QAC1C,OAAO,OAAO,CAAC,GAAG;;;QAAE;;gBACd,KAAK,GAAG,GAAG;YACf,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;gBAC1B,KAAK,IAAI,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;aAClD;YACD,OAAO,KAAK,CAAC;SACd,EAAC,CAAC;KACJ;IACH,aAAC;CAAA;;;;;;;;;;;;;;;;"}